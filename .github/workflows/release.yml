name: Publish Python Package

on:
  
  release:
    types: [published]
  workflow_dispatch:
  pull_request:
jobs:
  build:
    name: Build wheels with cibuildwheel
    runs-on: ${{ matrix.os }}

    strategy:


      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        # os: [linux, macos, windows] #, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir dist
        env:
          # CIBW_PLATFORM: ${{ matrix.os }}
          CIBW_BUILD: cp3{9,10,11,12}-*
          CIBW_SKIP: pp*,cp38*
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
  
  # publish:
  #   name: Publish to PyPI
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Upload wheels to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  
  publish-test:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Upload wheels to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # user: ${{ secrets.PYPI_TEST_USERNAME }}
          password: ${{ secrets.PYPI_TEST_PASSWORD }}
          repository-url: https://test.pypi.org/legacy/
          # attestations: false